import { c as createStaticVNode } from "./app.32c85e0d.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.21dcd24c.js";
var _imports_0 = "/cloud-pathfinder/assets/01_projects.243b8808.png";
var _imports_1 = "/cloud-pathfinder/assets/01_add_access.4a2b1898.png";
var _imports_2 = "/cloud-pathfinder/assets/01_edit.f5ee7678.png";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="adding-team-members" tabindex="-1"><a class="header-anchor" href="#adding-team-members" aria-hidden="true">#</a> Adding Team Members</h1><blockquote><p>Depending on the Lab Format, this section may have already been done. If you are not the &#39;devops&#39; admins for the openshift 101 dev/tools projects you can check to see if you have access to the projects with <code>oc projects</code>. If you have access to the openshift 101 project you will see something like this.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>* ocp101-june-dev - OpenShift <span class="token number">101</span> <span class="token punctuation">(</span>dev<span class="token punctuation">)</span>\nocp101-june-tools - OpenShift <span class="token number">101</span> <span class="token punctuation">(</span>tools<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></blockquote><h2 id="team-permissions" tabindex="-1"><a class="header-anchor" href="#team-permissions" aria-hidden="true">#</a> Team Permissions</h2><p>Once all projects have been created by the Platform Services team, the team admin must navigate to each project and assign your users the appropriate permissions.</p><p>As a team, find each project and add the rest of the team members. Feel free to experiment with the default roles.</p><p><img src="' + _imports_0 + '" alt=""></p><ul><li><p>Once in the project, switch to <code>Developer view</code> and then navigate to <code>Project -&gt; Project Access</code></p></li><li><p>Select <code>Add Access</code> at the bottom</p></li></ul><p><img src="' + _imports_1 + '" alt=""></p><ul><li>Add each user based on their GitHub id. Please note that we are using SSO with GitHub login at the moment, don&#39;t forget the suffix <code>@github</code>!</li></ul><p><img src="' + _imports_2 + '" alt=""></p><ul><li>Select <code>Save</code></li></ul><p>This can also be done on the CLI with the <code>oc</code> utility:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>oc policy add-role-to-user <span class="token punctuation">[</span>role<span class="token punctuation">]</span> <span class="token punctuation">[</span>username<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="roles" tabindex="-1"><a class="header-anchor" href="#roles" aria-hidden="true">#</a> Roles</h2><ul><li><p>Admin: This is the most privileged of the default roles. This role allows everything that <strong>Edit</strong> allow plus the management of <strong>user and service account access</strong></p></li><li><p>Edit: This is the primary role required for developers/devops to do work in a project. It allows the creation/edit/deletion of Openshift Objects including <strong>Secrets</strong></p></li><li><p>View: This is the basic role that provides users with read access to your project. <strong>Secrets are not viewable</strong> with this privilege.</p></li></ul>', 15);
function _sfc_render(_ctx, _cache) {
  return _hoisted_1;
}
var _01_adding_team_members_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _01_adding_team_members_html as default };
