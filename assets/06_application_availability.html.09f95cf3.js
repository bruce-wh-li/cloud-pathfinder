import { c as createStaticVNode } from "./app.32c85e0d.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.21dcd24c.js";
var _imports_0 = "/cloud-pathfinder/assets/04_app_availability_01.e996d9ea.png";
var _imports_1 = "/cloud-pathfinder/assets/04_app_availability_02.412f8dd9.png";
var _imports_2 = "/cloud-pathfinder/assets/04_app_availability_03.a87f2fd1.png";
var _imports_3 = "/cloud-pathfinder/assets/04_app_availability_05.5aafb080.png";
var _imports_4 = "/cloud-pathfinder/assets/04_app_availability_06.1c742193.png";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="application-availability" tabindex="-1"><a class="header-anchor" href="#application-availability" aria-hidden="true">#</a> Application Availability</h1><p>Prior to beginning this lab, navigate to the public route you created and finish the initial setup of your application. Ensure to select <code>Keep standlone</code> on the last page of the initial Rocket.Chat application setup.</p><h3 id="single-pod-applications" tabindex="-1"><a class="header-anchor" href="#single-pod-applications" aria-hidden="true">#</a> Single Pod Applications</h3><p>Single pod applications are not highly-available and can be abruptly terminated if the pod crashes or due to regularly scheduled platform maintenance. In order to simulate the effect on an application:</p><ul><li>Navigate to the pod, select <code>Actions</code> and <code>Delete</code><ul><li>Select <code>Delete pod immediately</code></li></ul></li></ul><p><img src="' + _imports_0 + '" alt=""></p><p><img src="' + _imports_1 + '" alt=""></p><ul><li>Refresh URL of application</li></ul><p><img src="' + _imports_2 + '" alt=""></p><h3 id="scaling-pods" tabindex="-1"><a class="header-anchor" href="#scaling-pods" aria-hidden="true">#</a> Scaling Pods</h3><p>To increase the availability of an application and defend against unplanned outages or planned maintenance tasks, an application must have multiple pods/instance running. For this reason, stateless applications are desirable as they do not require custom clustering configurations.</p><p><strong>Note</strong> Stateful applications do not support &quot;scaling pods&quot; as a form of high availability. Such a stateful example would be the mongodb database. For this reason, this lab focuses on the rocketchat application which will function with multiple pods. Please refer to specific application documentaion for details on scalability support.</p><ul><li>Navigate to <code>Topology</code> and scale your Deployment by selecting it and pressing <code>Actions &gt; Edit Count</code> and increasing the count to 2</li></ul><p><img src="' + _imports_3 + '" alt=""></p><ul><li>Or from the CLI</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>oc -n <span class="token punctuation">[</span>-dev<span class="token punctuation">]</span> scale deployment/rocketchat-<span class="token punctuation">[</span>username<span class="token punctuation">]</span> --replicas<span class="token operator">=</span><span class="token number">2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><p>Notice the balancing across nodes by exploring the details of each pod <img src="' + _imports_4 + '" alt=""></p><ul><li>Or from the CLI notice the hosts the pod runs on (in the last field)</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>oc -n <span class="token punctuation">[</span>-dev<span class="token punctuation">]</span> get pods --field-selector<span class="token operator">=</span>status.phase<span class="token operator">=</span>Running -l <span class="token assign-left variable">deployment</span><span class="token operator">=</span>rocketchat-<span class="token punctuation">[</span>username<span class="token punctuation">]</span> -o wide\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>you can also simply combine with grep:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>oc -n [-dev] get pods -o wide | grep rocketchat-[username]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>The output should look similar to this:</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>rocketchat-<span class="token punctuation">[</span>username<span class="token punctuation">]</span>-7-k6kcc    <span class="token number">1</span>/1       Running   <span class="token number">0</span>          16m       <span class="token number">172.51</span>.68.135   training-aro-us-vmdqq-worker-westus22-kvjdt\nrocketchat-<span class="token punctuation">[</span>username<span class="token punctuation">]</span>-7-k82w2    <span class="token number">0</span>/1       Running   <span class="token number">0</span>          1m        <span class="token number">172.51</span>.76.32    training-aro-us-vmdqq-worker-westus23-kvjdt\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>Delete single pod, refresh the URL of application and notice that the application is served by the surviving pods</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>oc -n <span class="token punctuation">[</span>-dev<span class="token punctuation">]</span> get pods --field-selector<span class="token operator">=</span>status.phase<span class="token operator">=</span>Running -l <span class="token assign-left variable">deployment</span><span class="token operator">=</span>rocketchat-<span class="token punctuation">[</span>username<span class="token punctuation">]</span> -o name <span class="token operator">|</span> <span class="token function">head</span> -1 <span class="token operator">|</span> <span class="token function">xargs</span> -I <span class="token punctuation">{</span><span class="token punctuation">}</span> oc -n <span class="token punctuation">[</span>-dev<span class="token punctuation">]</span> delete <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token function">watch</span> -dg -n <span class="token number">1</span> <span class="token function">curl</span> -fsSL http://rocketchat-<span class="token punctuation">[</span>username<span class="token punctuation">]</span>-<span class="token punctuation">[</span>-dev<span class="token punctuation">]</span>.<span class="token punctuation">[</span>namespace<span class="token punctuation">]</span>.apps.pathfinder.aro.devops.gov.bc.ca/api/info\n\n<span class="token comment"># Notice that eventually your RocketChat will be back to having 2 pods</span>\noc -n <span class="token punctuation">[</span>-dev<span class="token punctuation">]</span> get pods --field-selector<span class="token operator">=</span>status.phase<span class="token operator">=</span>Running -l <span class="token assign-left variable">deployment</span><span class="token operator">=</span>rocketchat-<span class="token punctuation">[</span>username<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>Perform deployment, refresh the URL of application and notice that the application is served by the surviving pods</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>oc -n <span class="token punctuation">[</span>-dev<span class="token punctuation">]</span> rollout latest deployment/rocketchat-<span class="token punctuation">[</span>username<span class="token punctuation">]</span>\n\n<span class="token comment"># Monitor pods being created and deleted; and</span>\n<span class="token function">watch</span> -dg -n <span class="token number">1</span> -x oc -n <span class="token punctuation">[</span>-dev<span class="token punctuation">]</span> get pods -l <span class="token assign-left variable">deployment</span><span class="token operator">=</span>rocketchat-<span class="token punctuation">[</span>username<span class="token punctuation">]</span>\n\n<span class="token comment"># From another terminal, monitor RocketChat response</span>\n<span class="token function">watch</span> -dg -n <span class="token number">1</span> <span class="token function">curl</span> -fsSL http://rocketchat-<span class="token punctuation">[</span>username<span class="token punctuation">]</span>-<span class="token punctuation">[</span>-dev<span class="token punctuation">]</span>.<span class="token punctuation">[</span>namespace<span class="token punctuation">]</span>.apps.pathfinder.aro.devops.gov.bc.ca/api/info\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul>', 17);
function _sfc_render(_ctx, _cache) {
  return _hoisted_1;
}
var _06_application_availability_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _06_application_availability_html as default };
