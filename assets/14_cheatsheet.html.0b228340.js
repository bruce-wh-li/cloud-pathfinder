import { c as createStaticVNode } from "./app.32c85e0d.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.21dcd24c.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="cheatsheet" tabindex="-1"><a class="header-anchor" href="#cheatsheet" aria-hidden="true">#</a> Cheatsheet</h1><p>This is a placeholder to work with the students and determine what they find valuable in this sheet.</p><h2 id="deleting-your-lab" tabindex="-1"><a class="header-anchor" href="#deleting-your-lab" aria-hidden="true">#</a> Deleting your lab</h2><div class="custom-container warning"><p class="custom-container-title">[WARNING]</p><p>You should ALWAYS validate the output before using <code>oc delete</code>. You can do that by replacing <code>oc delete</code> with <code>oc get</code>, or if using with xargs prefix with <code>echo</code>.</p></div><div class="custom-container warning"><p class="custom-container-title">[WARNING]</p><p>Always double check, and triple check before running <code>oc delete</code>!!!</p></div><div class="custom-container warning"><p class="custom-container-title">[WARNING]</p><p>Be very careful when copying and pasting directly into a terminal!!!</p></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># List/validate resources to be deleted by labels</span>\noc -n <span class="token punctuation">[</span>-tools<span class="token punctuation">]</span> get all -l <span class="token assign-left variable">build</span><span class="token operator">=</span>rocketchat-<span class="token punctuation">[</span>username<span class="token punctuation">]</span>\n\n<span class="token comment"># Delete by labels</span>\noc -n <span class="token punctuation">[</span>-tools<span class="token punctuation">]</span> delete all -l <span class="token assign-left variable">build</span><span class="token operator">=</span>rocketchat-<span class="token punctuation">[</span>username<span class="token punctuation">]</span>\n\n<span class="token comment"># List/validate resources to be deleted by get+grep+delete</span>\noc -n <span class="token punctuation">[</span>-dev<span class="token punctuation">]</span> get all,pvc,secret,configmap -o name --no-headers <span class="token operator">|</span> <span class="token function">grep</span> -i -F -e <span class="token string">&#39;-[username]&#39;</span>\n\n<span class="token comment"># Delete resources by using get+grep+delete</span>\noc -n <span class="token punctuation">[</span>-dev<span class="token punctuation">]</span> get all -o name --no-headers <span class="token operator">|</span> <span class="token function">grep</span> -i -F -e <span class="token string">&#39;-[username]&#39;</span> <span class="token operator">|</span> <span class="token function">xargs</span> -I <span class="token punctuation">{</span><span class="token punctuation">}</span> oc  -n <span class="token punctuation">[</span>-dev<span class="token punctuation">]</span> delete <span class="token string">&#39;{}&#39;</span>\n\n<span class="token comment"># Delete data/unrecoverable resources (not covered by &#39;all&#39;) by using get+grep+delete</span>\noc -n <span class="token punctuation">[</span>-dev<span class="token punctuation">]</span> get pvc,secret,configmap -o name --no-headers <span class="token operator">|</span> <span class="token function">grep</span> -i -F -e <span class="token string">&#39;-[username]&#39;</span> <span class="token operator">|</span> <span class="token function">xargs</span> -I <span class="token punctuation">{</span><span class="token punctuation">}</span> oc -n <span class="token punctuation">[</span>-dev<span class="token punctuation">]</span> delete <span class="token string">&#39;{}&#39;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>', 7);
function _sfc_render(_ctx, _cache) {
  return _hoisted_1;
}
var _14_cheatsheet_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _14_cheatsheet_html as default };
